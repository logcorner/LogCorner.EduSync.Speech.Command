trigger:
  batch: true
  branches:
    include:
    - azure-pipelines-aks

pool:
  name: LOGCORNER-POOL

variables:
  tag: 1.0.0-$(Build.BuildId)

stages:
- stage: Build
  jobs:
  # Build the Visual Studio solution.
  - job: Build
    displayName: Build application and database
    pool:
      name: LOGCORNER-POOL

    steps:

    - task: DockerCompose@0
      displayName: 'Build docker images '
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'AzureDevOpsServiceConnection'
        dockerComposeFile: 'src/docker-compose.yml'
        additionalDockerComposeFiles: |
          docker-compose.override.yml
          docker-compose-unit-tests.yml
          docker-compose.override-unit-tests.yml
        dockerComposeFileArgs: 'DOCKER_REGISTRY=buildagent'
        action: 'Build services'
        additionalImageTags: 'acrlogcornerregistryf5f3b5dppivbi.azurecr.io'
        includeLatestTag: true
    - task: DockerCompose@0
      displayName: 'Run UnitTests'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        dockerComposeFile: 'src/docker-compose-unit-tests.yml'
        additionalDockerComposeFiles: 'docker-compose.override-unit-tests.yml'
        dockerComposeFileArgs: 'DOCKER_REGISTRY=buildagent'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up'
        
    - task: AzureCLI@2
      displayName: Docker Build & Push
      inputs:
        azureSubscription: 'AzureDevOpsServiceConnection'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          docker tag -t buildagent/logcorner-edusync-speech-mssql-tools acrlogcornerregistryf5f3b5dppivbi.azurecr.io/logcorner-edusync-speech-mssql-tools:$(tag)
          az acr login -n acrlogcornerregistry
          docker push acrlogcornerregistryf5f3b5dppivbi.azurecr.io/logcorner-edusync-speech-mssql-tools:$(tag)
    - task: DockerCompose@0
      displayName: 'Publish Images Services'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'AzureDevOpsServiceConnection'
        azureContainerRegistry: '{"loginServer":"acrlogcornerregistryf5f3b5dppivbi.azurecr.io", "id" : "/subscriptions/023b2039-5c23-44b8-844e-c002f8ed431d/resourceGroups/aks-biceps-production/providers/Microsoft.ContainerRegistry/registries/acrlogcornerregistryf5f3b5dppivbi"}'
        dockerComposeFile: 'src/docker-compose.yml'
        dockerComposeFileArgs: 'DOCKER_REGISTRY=acrlogcornerregistryf5f3b5dppivbi.azurecr.io'
        action: 'Push services'
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/**/TestResults/**/tests-results*.xml'
        failTaskOnFailedTests: true
      continueOnError: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: 'deploy/kubernetes/aks/'
        ArtifactName: 'drop-arm'
        publishLocation: 'Container'