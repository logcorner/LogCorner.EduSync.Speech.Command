parameters:
- name: BUILD_NUMBER
- name: ACR_LOGIN_SERVER
- name: serviceConnectionName
- name: resourceGroupName
- name: kubernetesClusterName
- name: workspace
stages:
- stage: deploy_cluster_to_${{ parameters.workspace }}_environment 
  displayName: deploy  to ${{ parameters.workspace }} environment
  jobs:
  - deployment: DeployTerraform
    displayName: deploy  terraform files
    pool:
      vmImage: "ubuntu-18.04"
    
    environment: ${{ parameters.workspace }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "##vso[task.setvariable variable=ACR_LOGIN_SERVER]${{ parameters.ACR_LOGIN_SERVER }}"
                Write-Host "##vso[task.setvariable variable=BUILD_NUMBER]${{ parameters.BUILD_NUMBER }}"
          - task: replacetokens@3
            displayName: Replace Tokens in  CommandApi
            inputs:
              rootDirectory: 'deploy/kubernetes/aks-apim'
              targetFiles: '**\*.yml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              actionOnNoFiles: 'continue'
              enableTransforms: false
              tokenPrefix: '__'
              tokenSuffix: '__'
              useLegacyPattern: false
              enableTelemetry: true

          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: '${{ parameters.serviceConnectionName }}'
              azureResourceGroup: '${{ parameters.resourceGroupName }}'
              kubernetesCluster: '${{ parameters.kubernetesClusterName }}'
              command: 'apply'
              arguments: '-f . -f CommandDatabase -f CommandApi'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              workingDirectory: '$(System.DefaultWorkingDirectory)/deploy/kubernetes/aks-apim'

     